import { addKeyword, EVENTS } from "@bot-whatsapp/bot";
import { flowSiCliente } from "../flowCliente";
import { blackListFlow } from "../blacklistflow";

export const flowConfirmacionPoliza = addKeyword(EVENTS.ACTION)
  .addAnswer([
    "Gracias, a la brevedad nos comunicaremos para informarle el estado de su documentaci√≥n. (cod#1201)",
    "¬øNecesita algo m√°s?",
    "üëâ *1* - Solicitar otra documentaci√≥n.",
    "üëâ *2* - Men√∫ cliente.",
    "üëâ *0* - No, finalizar conversaci√≥n.",
  ])
  .addAction({ capture: true }, async (ctx, { gotoFlow, fallBack }) => {
    const response = ctx.body;
    switch (response) {
      case "1":
        return gotoFlow(flowDocumentaci√≥n);
      case "2":
        return gotoFlow(flowSiCliente);
      case "0":
        return gotoFlow(blackListFlow);
      default:
        return fallBack("‚ùå Opci√≥n no v√°lida.");
    }
  });

export const flowConfirmacionCuponera = addKeyword(EVENTS.ACTION)
  .addAnswer([
    "Gracias, a la brevedad nos comunicaremos para informarle el estado de su cuponera. (cod#1201)",
    "¬øNecesita algo m√°s?",
    "üëâ *1* - Solicitar otra documentaci√≥n.",
    "üëâ *2* - Men√∫ cliente.",
    "üëâ *0* - No, finalizar conversaci√≥n.",
  ])
  .addAction({ capture: true }, async (ctx, { gotoFlow, fallBack }) => {
    const response = ctx.body;
    switch (response) {
      case "1":
        return gotoFlow(flowDocumentaci√≥n);
      case "2":
        return gotoFlow(flowSiCliente);
      case "0":
        return gotoFlow(blackListFlow);
      default:
        return fallBack("‚ùå Opci√≥n no v√°lida.");
    }
  });

export const flowPoliza = addKeyword(EVENTS.ACTION)
  .addAnswer([
    "Por favor, deje el dni del titular o patente en caso de ser un veh√≠culo.",
    "üëâ *0* - Para cancelar.",
  ])
  .addAction({ capture: true }, async (ctx, { gotoFlow, fallBack }) => {
    const response = ctx.body;
    if (response === "0") {
      return gotoFlow(flowDocumentaci√≥n);
    }
    if (response.length > 3) {
      return gotoFlow(flowConfirmacionPoliza);
    }
    return fallBack("‚ùå Debe ingresar un dni o patente v√°lida.");
  });

export const flowCuponera = addKeyword(EVENTS.ACTION)
  .addAnswer([
    "Por favor deje el dni del titular o patente en caso de ser un veh√≠culo.",
    "üëâ *0* - Para cancelar.",
  ])
  .addAction({ capture: true }, async (ctx, { gotoFlow, fallBack }) => {
    const response = ctx.body;
    if (response === "0") {
      return gotoFlow(flowDocumentaci√≥n);
    }
    if (response.length > 3) {
      return gotoFlow(flowConfirmacionCuponera);
    }
    return fallBack("‚ùå Debe ingresar un dni o patente v√°lida.");
  });

export const flowDocumentaci√≥n = addKeyword(EVENTS.ACTION)
  .addAnswer("¬øQue documentaci√≥n necesita?")
  .addAnswer([
    "üëâ *1* - P√≥liza.",
    "üëâ *2* - Cuponera.",
    "üëâ *3* - Volver al men√∫ cliente.",
    "üëâ *0* - Finalizar.",
  ])
  .addAction(
    { capture: true },
    async (ctx, { gotoFlow, fallBack, endFlow }) => {
      const option = ctx.body;
      switch (option) {
        case "1":
          return gotoFlow(flowPoliza);
        case "2":
          return gotoFlow(flowCuponera);
        case "3":
          return gotoFlow(flowSiCliente);
        case "0":
          return endFlow("¬°Nos vemos luego!");
        default:
          return fallBack(
            "‚ùå Opci√≥n no v√°lida, por favor seleccione una opci√≥n v√°lida."
          );
      }
    }
  );
